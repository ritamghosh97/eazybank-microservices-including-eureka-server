server:
  port: 8080

spring:

  application:
    name: accounts

  profiles:
    active: prod

  datasource:
    url: jdbc:mysql://localhost:3307/accountsdb
    username: eazybank
    password: eazybank

  sql:
    init:
      mode: always

  jpa:
    show-sql: true

  config:
    import: optional:configserver:http://localhost:8071

  cloud:
    kubernetes:
      discovery:
        all-namespaces: true

    openfeign:
      circuitbreaker:
        enabled: true

    function:
      definition: updateCommunication

    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication

      kafka:
        binder:
          brokers:
            - localhost:9092

management:
  endpoints:
    web:
      exposure:
        include: "*"

  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

  endpoint:
    shutdown:
      enabled: true

    health:
      probes:
        enabled: true

  info:
    env:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 5
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

info:
  app:
    name: accounts
    description: Accounts application which is responsible for handling customer's accounts data
    version: 1.0.0

logging:
  level:
    com:
      ritam:
        accounts: DEBUG

  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"